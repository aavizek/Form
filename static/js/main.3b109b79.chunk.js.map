{"version":3,"sources":["First.js","Fir.js","App.js","serviceWorker.js","index.js"],"names":["formschema","Yup","object","shape","email","string","required","first_name","last_name","password","min","college","phone","city","First","state","value","handleSubmit","values","_ref","_ref$props","props","setSubmitting","_this","console","log","setState","alert","_this2","this","val","Object","keys","map","i","react_default","a","createElement","className","formik_esm","initialValues","gender","validationSchema","onSubmit","render","formProps","style","marginLeft","marginTop","touched","errors","type","name","placeholder","component","disabled","isSubmitting","width","React","Component","Fir","class","react_router_dom","to","href","role","App","react_router","path","exact","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3b109b79.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Formik, FormikProps, Form, Field, ErrorMessage } from \"formik\";\r\nimport Yup from \"yup\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nconst formschema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email(\"Email not valid\")\r\n    .required(\"Email is required\"),\r\n  first_name: Yup.string().required(\"Name required sir\"),\r\n  last_name: Yup.string().required(\"Name required sir\"),\r\n  password: Yup.string()\r\n    .min(9, \"atleast 9 characters\")\r\n    .required(\"Password is required\"),\r\n  college: Yup.string().required(\"Please mention your college name\"),\r\n  phone: Yup.string()\r\n    .min(10, \"Please enter 10 digit number\")\r\n    .required(\"Required field\"),\r\n  city: Yup.string().required(\"Please mention your city\")\r\n});\r\n\r\nclass First extends React.Component {\r\n  state = {\r\n    value: []\r\n  };\r\n\r\n  handleSubmit = (values, { props = this.props, setSubmitting }) => {\r\n    console.log(values);\r\n    this.setState({ value: values });\r\n    alert(\"Form Submitted\");\r\n    setSubmitting(false);\r\n    return;\r\n  };\r\n\r\n  render() {\r\n    let val = null;\r\n    // if (this.state.value) {\r\n    //   val = this.state.value.map(value1 => {\r\n    //     return <div>{value1}</div>;\r\n    //   });\r\n    // }\r\n\r\n    if (this.state.value != null) {\r\n      val = Object.keys(this.state.value).map(i => {\r\n        return <div>{this.state.value[i]}</div>;\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <Formik\r\n          initialValues={{\r\n            first_name: \"\",\r\n            email: \"\",\r\n            gender: \"\"\r\n          }}\r\n          validationSchema={formschema}\r\n          // validate={values => {\r\n          //   let errors = [];\r\n\r\n          //   if (!values.email) errors.email = \"Email Address Required\";\r\n\r\n          //   //check if my values have errors\r\n          //   return errors;\r\n          // }}\r\n          onSubmit={this.handleSubmit}\r\n          render={formProps => {\r\n            return (\r\n              <div className=\"left\">\r\n                <Form style={{ marginLeft: 140, marginTop: 30 }}>\r\n                  {formProps.touched.email && formProps.errors.first_name && (\r\n                    <p>{formProps.errors.first_name}</p>\r\n                  )}\r\n                  <label>First Name</label>\r\n                  <Field\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    name=\"first_name\"\r\n                    placeholder=\"First Name\"\r\n                  />\r\n                  <br />\r\n\r\n                  {formProps.touched.last_name &&\r\n                    formProps.errors.last_name && (\r\n                      <p>{formProps.errors.last_name}</p>\r\n                    )}\r\n                  <label>Last Name</label>\r\n                  <Field\r\n                    type=\"text\"\r\n                    name=\"last_name\"\r\n                    placeholder=\"Last Name\"\r\n                    className=\"form-control\"\r\n                  />\r\n                  {/* <ErrorMessage name=\"first_name\" /> */}\r\n                  <br />\r\n\r\n                  {formProps.touched.email && formProps.errors.email && (\r\n                    <p>{formProps.errors.email}</p>\r\n                  )}\r\n                  <label>Email id</label>\r\n                  <Field\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email address\"\r\n                    className=\"form-control\"\r\n                  />\r\n                  {/* <ErrorMessage name=\"email\" /> */}\r\n                  <br />\r\n\r\n                  {formProps.touched.password && formProps.errors.password && (\r\n                    <p>{formProps.errors.password}</p>\r\n                  )}\r\n                  <label>Password</label>\r\n                  <Field\r\n                    className=\"form-control\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                  />\r\n                  <br />\r\n\r\n                  {formProps.touched.college && formProps.errors.college && (\r\n                    <p>{formProps.errors.college}</p>\r\n                  )}\r\n                  <label>College Name</label>\r\n                  <Field\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    name=\"college\"\r\n                    placeholder=\"College name\"\r\n                  />\r\n                  <br />\r\n\r\n                  {formProps.touched.phone && formProps.errors.phone && (\r\n                    <p>{formProps.errors.phone}</p>\r\n                  )}\r\n                  <label>Number</label>\r\n                  <Field\r\n                    type=\"number\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Phone no.\"\r\n                    className=\"form-control\"\r\n                  />\r\n                  <br />\r\n\r\n                  {formProps.touched.city && formProps.errors.city && (\r\n                    <p>{formProps.errors.city}</p>\r\n                  )}\r\n                  <label>City</label>\r\n                  <Field\r\n                    type=\"text\"\r\n                    name=\"city\"\r\n                    placeholder=\"City\"\r\n                    className=\"form-control\"\r\n                  />\r\n\r\n                  <br />\r\n\r\n                  <label>Gender</label>\r\n                  <Field\r\n                    className=\"form-control\"\r\n                    name=\"gender\"\r\n                    component=\"select\"\r\n                    placeholder=\"Your Gender\"\r\n                  >\r\n                    <option value=\"\" />\r\n                    <option value=\"male\">Male</option>\r\n                    <option value=\"female\">Female</option>\r\n                  </Field>\r\n\r\n                  <br />\r\n\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-dark\"\r\n                    disabled={formProps.isSubmitting}\r\n                    style={{ width: \"350px\" }}\r\n                  >\r\n                    Submit Form\r\n                  </button>\r\n                </Form>\r\n              </div>\r\n            );\r\n          }}\r\n        />\r\n        <div className=\"right\">\r\n          <h3 style={{ marginTop: \"150px\" }}>{val}</h3>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default First;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Fir extends Component {\r\n  render() {\r\n    return (\r\n      <div class=\"container\" style={{ marginTop: \"80px\" }}>\r\n        <div class=\"jumbotron\">\r\n          <h1 class=\"display-4\">Welcome to React form</h1>\r\n          <p class=\"lead\">\r\n            This is a simple React form, which will display the values given by\r\n            you in the form.\r\n          </p>\r\n          <hr class=\"my-4\" />\r\n          <p>Click on next button for React Form.</p>\r\n          <p class=\"lead\">\r\n            <Link to=\"/details\">\r\n              <a class=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">\r\n                Next\r\n              </a>\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fir;\r\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport First from \"./First\";\nimport Fir from \"./Fir\";\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Switch>\n          <Route path=\"/\" exact component={Fir} />;\n          <Route path=\"/details\" component={First} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App email=\"ankit\" />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}